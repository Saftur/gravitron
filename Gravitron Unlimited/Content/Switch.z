class Switch : ZilchComponent
{
    [Property]
    var Active : Boolean = false;
    
    [Property]
    var Gravity : Boolean = true;
    
    [Property]
    var Light : Boolean = false;
    
    [Property]
    var Door : Boolean = false;
    
    [Property]
    var Ground : Boolean = true;
    
    [Property]
    var DoorToOpen : CogPath = null;
    
    [Property]
    var PlayerPath : CogPath = null;
    var Player : Cog = null;
    
    function Initialize(init : CogInitializer) //Because colors in the editor don't match code
    {
        /*if(this.Gravity)
        {
            this.Owner.Sprite.Color = Real4(0.329412, 0.20625, 0.625, 1);
        }
        if(this.Light)
        {
            this.Owner.Sprite.Color = Real4(0.360784, 0.654901, 0.2, 1);
        }*/
        //Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        this.Player = this.PlayerPath.Cog;
    }
    /*
    Add more Properties for any additional switch types, code for what the switch does should be added to 
    "PlayerInteraction"
    */
    
    /*function OnLogicUpdate(event : UpdateEvent) {
        
    }*/
    
    function Activate() {
        if (this.Gravity) {
            if (this.Player != null)
                this.Player.PlayerMovement.CrawlOffset *= Real3(1,-1,1);
            
            this.Space.LevelSettings.GravityEffect.Direction *= Real3(1,-1,1);
            
            var switches = this.Space.FindAllObjectsByName("GravitySwitch");
            var crates = this.Space.FindAllObjectsByName("StaticCrate");
            var guards = this.Space.FindAllObjectsByName("Guard");
            foreach(var s in switches)
            {
                //Changing the different switch states
                //Console.WriteLine("`s.Sprite.Color`");
                /*if(s.Sprite.Color == Real4(0.329412, 0.20625, 0.625, 1))
                {
                    
                    s.Sprite.Color = Real4(24, 86, 159, 1);
                }
                else
                {
                    s.Sprite.Color = Real4(0.329412, 0.20625, 0.625, 1);
                }*/
                if (this.Space.LevelSettings.GravityEffect.Direction.Y > 0) {
                    if (this.Ground)
                        s.Sprite.SpriteSource = SpriteSource.LeverBlue8Ground;
                    else
                        s.Sprite.SpriteSource = SpriteSource.LeverBlue8;
                } else {
                    if (this.Ground)
                        s.Sprite.SpriteSource = SpriteSource.LeverBlue1Ground;
                    else
                        s.Sprite.SpriteSource = SpriteSource.LeverBlue1;
                }
            }
            if(crates != null)
            {
                foreach(var c in crates)
                {
                    c.GravityEffect.Direction *= Real3(1,-1,1);
                }
            }
            if(guards != null)
            {
                foreach(var g in guards)
                {
                    g.Guard.JumpHeight *= -1;
                    g.Guard.AlertSymbol.FollowObject.Displacement *= -1;
                }
            }
        }
        if (this.Light) {
            var lightOn = Real4(1, 0.972549, 0.596078, 0.5);
            var lightOff = Real4(0, 0, 0, 0);
            var lightbulbs = this.Space.FindAllObjectsByName("Lightbulb");
            foreach(var lb in lightbulbs)
            {
                if(lb.Tag.Number == this.Owner.Tag.Number)
                {
                    var light = lb.LightboxSpawner.Lightbox.Cog;
                    if(light.Sprite.Color == lightOff)
                        light.Sprite.Color = lightOn;
                    else
                        light.Sprite.Color = lightOff;
                        
                    light.MultiConvexMeshCollider.SendsEvents = !light.MultiConvexMeshCollider.SendsEvents;
                }
            }
            var switches = this.Space.FindAllObjectsByName("LightSwitch");
            foreach(var s in switches)
            {
                if(s.Sprite.Color == Real4(0.360784, 0.654901, 0.2, 1))
                {
                    s.Sprite.Color = Real4(0.360784, 0.654901, 0.9, 1);
                }
                else
                {
                    s.Sprite.Color = Real4(0.360784, 0.654901, 0.2, 1);
                }
            }
        }
        /* INCOMPLETE  could not finish in time */
        //Door
        //if(this.Door)
        //{
            //var doorOpen = Real4(0.3, 0.6, 0.5, 1.0);
            //var doorClosed = Real4(0.6, 0.6, 0.5, 1.0);
            //var doorToOpen = this.Space.Switch.DoorToOpen;
            //if(this.Space.DoorSwitch.Cog.Sprite.Color == doorClosed)
            //{
             //   this.doorToOpen.Cog.BoxCollider.Ghost = true;
            //    this.doorToOpen.Cog.Sprite.Color = (0, 0, 0, 0);
           // }
          //  else
          //  {
          //      this.doorToOpen.Cog.BoxCollider.Ghost = false;
         //       this.doorToOpen.Cog.Sprite.Color = (0, 0, 0, 1.0);
         //   }
         //   var switches = this.Space.FindAllObjectsByName("DoorSwitch");
          //  foreach(var s in switches)
         //   {
           //     if(s.Sprite.Color == doorClosed)
           //     {
            //        s.Sprite.Color = doorOpen;
           //     }
            //    else
            //    {
            //        s.Sprite.Color = doorClosed;
            //    }
          //  }
        //}
    }
}
