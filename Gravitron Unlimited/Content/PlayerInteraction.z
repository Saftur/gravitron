class PlayerInteraction : ZilchComponent
{
    var CurrentItem : Cog = null;
    var HoldingItem : Boolean = false;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.Space) && this.CurrentItem != null && !this.HoldingItem)
        {
            this.CurrentItem.FollowObject.ObjectToFollow.Cog = this.Owner;
            this.HoldingItem = true;
        }
        else if(Zero.Keyboard.KeyIsPressed(Keys.Space) && this.CurrentItem != null)
        {
            var dad = this.Owner.FollowObject.ObjectToFollow.Cog;
            
            if(this.CurrentItem.Pickupable.ImInSomething)
            {
                var x = dad.Transform.Translation.X - this.CurrentItem.Transform.Translation.X;
                if(x < 0)
                    x = -1;
                else
                    x = 2;
                    Console.WriteLine("Released");
                this.CurrentItem.Transform.Translation += Real3(x, 0, 0);
            }
            this.CurrentItem.FollowObject.ObjectToFollow.Cog = null;
            this.CurrentItem.RigidBody.Velocity = dad.RigidBody.Velocity;
            this.HoldingItem = false;
        }
    }
    function OnCollisionStarted(event : CollisionEvent)
    {
       
        if(event.OtherObject.Pickupable != null && event.OtherObject.Pickupable.Pickupable && this.CurrentItem == null)
        {
                this.CurrentItem = event.OtherObject;
        }
    }
    function OnCollisionEnded(event : CollisionEvent)
    {
        
        if(event.OtherObject.Pickupable != null && event.OtherObject.Pickupable.Pickupable && this.CurrentItem != null)
        {
            this.CurrentItem = null;
        }
    }
}