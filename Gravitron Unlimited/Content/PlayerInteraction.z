class PlayerInteraction : ZilchComponent
{
    var CurrentItem : Cog = null;
    var CurrentSwitch : Cog = null;
    var CurrentCrate : Cog = null;
    var IMadeIt : Boolean = false; //reached exit
    var Player : Cog = null;
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
        this.Player = this.Owner.FollowObject.ObjectToFollow.Cog;
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        //Console.WriteLine("`this.Player.RigidBody.Velocity` `this.Player.RigidBody.Mass`");
        if(this.Player.PlayerStatus.Caught)
        {
            return;
        }
        if(this.Player.PlayerStatus.Pulling)
        {
            this.PullCrate();
        }
        if(Zero.Keyboard.KeyIsPressed(Keys.Space)) //OBJECT INTERACTIONS
        {
            //Exit
            if(this.IMadeIt)
            {
                //NextLevel
                this.GameSession.Quit();
            }
            //Crates
            else if(this.CurrentCrate != null)
            {
                Console.WriteLine("`this.Player.PlayerStatus.Pulling`");
                if(!this.Player.PlayerStatus.Pulling)
                {
                    this.Player.PlayerStatus.Pulling = true;
                }
                else
                {
                    this.Player.PlayerStatus.Pulling = false;
                }
                Console.WriteLine("`this.Player.PlayerStatus.Pulling`");
            }
            //Switches
            else if(this.CurrentSwitch != null)
            {
                //Gravity
                if(this.CurrentSwitch.Switch.Gravity)
                {
                    var switches = this.Space.FindAllObjectsByName("GravitySwitch");
                    var crates = this.Space.FindAllObjectsByName("StaticCrate");
                    var guards = this.Space.FindAllObjectsByName("Guard");
                    foreach(var s in switches)
                    {
                        //Changing the different switch states
                        //Console.WriteLine("`s.Sprite.Color`");
                        if(s.Sprite.Color == Real4(0.329412, 0.20625, 0.625, 1))
                        {
                            s.Sprite.Color = Real4(24, 86, 159, 1);
                        }
                        else
                        {
                            s.Sprite.Color = Real4(0.329412, 0.20625, 0.625, 1);
                        }
                    }
                    if(crates != null)
                    {
                        foreach(var c in crates)
                        {
                            c.GravityEffect.Direction *= Real3(1,-1,1);
                        }
                    }
                    if(guards != null)
                    {
                        foreach(var g in guards)
                        {
                            g.Guard.JumpHeight *= -1;
                            g.Guard.AlertSymbol.FollowObject.Displacement *= -1;
                        }
                    }
                    
                    this.Player.PlayerMovement.CrawlOffset *= Real3(1,-1,1);
                    
                    this.Space.LevelSettings.GravityEffect.Direction *= Real3(1,-1,1);
                }
                //Light
                if(this.CurrentSwitch.Switch.Light)
                {
                    var lightOn = Real4(1, 0.972549, 0.596078, 0.5);
                    var lightOff = Real4(0, 0, 0, 0);
                    var lightBox = this.Space.FindObjectByName("LightBox");
                    if(lightBox.Sprite.Color == lightOn)
                    {
                        lightBox.Sprite.Color = lightOff;
                        
                    }
                    else
                    {
                        lightBox.Sprite.Color = lightOn;
                    }
                    var switches = this.Space.FindAllObjectsByName("LightSwitch");
                    foreach(var s in switches)
                    {
                        if(s.Sprite.Color == Real4(0.360784, 0.654901, 0.2, 1))
                        {
                            s.Sprite.Color = Real4(0.360784, 0.654901, 0.9, 1);
                        }
                        else
                        {
                            s.Sprite.Color = Real4(0.360784, 0.654901, 0.2, 1);
                        }
                    }
                }
                //Door
                //if(this.CurrentSwitch.Switch.Door)
                //{
                    //var doorOpen = Real4(0.3, 0.6, 0.5, 1.0);
                    //var doorClosed = Real4(0.6, 0.6, 0.5, 1.0);
                    //var doorToOpen = this.Space.Switch.DoorToOpen;
                    //if(this.Space.DoorSwitch.Cog.Sprite.Color == doorClosed)
                    //{
                     //   this.doorToOpen.Cog.BoxCollider.Ghost = true;
                    //    this.doorToOpen.Cog.Sprite.Color = (0, 0, 0, 0);
                   // }
                  //  else
                  //  {
                  //      this.doorToOpen.Cog.BoxCollider.Ghost = false;
                 //       this.doorToOpen.Cog.Sprite.Color = (0, 0, 0, 1.0);
                 //   }
                 //   var switches = this.Space.FindAllObjectsByName("DoorSwitch");
                  //  foreach(var s in switches)
                 //   {
                   //     if(s.Sprite.Color == doorClosed)
                   //     {
                    //        s.Sprite.Color = doorOpen;
                   //     }
                    //    else
                    //    {
                    //        s.Sprite.Color = doorClosed;
                    //    }
                  //  }
                }
            }
        }
    }
    function PullCrate()
    {
        var yvel = this.CurrentCrate.RigidBody.Velocity.Y;
        this.CurrentCrate.RigidBody.Velocity = Real3(this.Player.RigidBody.Velocity.X * 1.5, yvel, 0);
    }
    function OnCollisionStarted(event : CollisionEvent)
    {
        //Console.WriteLine("`event.OtherObject.Name`");
        var o = event.OtherObject;
        if(o.Name == "Exit")    this.IMadeIt = true;
        
        if(o.Name == "Guard")   this.Player.PlayerStatus.Caught = true;
        
        if(o.Name == "StaticCrate")
        {
            this.CurrentCrate = o;
        }
            
        if(o.Switch != null)    this.CurrentSwitch = o;
        
        
        
        //Collision Only
        
        //Light
        if(o.Name == "LightBox")   this.Player.PlayerStatus.Spotted = true;
        //Checkpoint
        if(o.Name == "Checkpoint")  
        {
            o.Sprite.Color = Real4(0,1,0,1);
            var guard = this.Space.FindObjectByName("Guard");
            var crate = this.Space.FindObjectByName("StaticCrate");
            
            this.Player.PlayerStatus.RespawnPoint = o.Transform.Translation;
            this.GameSession.GameVars.CurrentGravity = this.Space.LevelSettings.GravityEffect.Direction;
            this.GameSession.GameVars.PlayerOffset = this.Player.PlayerMovement.CrawlOffset;
            if(guard != null)
                this.GameSession.GameVars.CurrentCrateGravity = crate.GravityEffect.Direction;
            if(crate != null)
                this.GameSession.GameVars.GuardJumpHeight = guard.Guard.JumpHeight;
        }
    }
    function OnCollisionEnded(event : CollisionEvent)
    {
        var o = event.OtherObject;
        if(o.Name == "Exit")
        {
            this.IMadeIt = false;
        }
        if(this.CurrentCrate != null && o.Name == "StaticCrate")
        {
            this.Player.PlayerStatus.Pulling = false;
            this.CurrentCrate = null;
        }
        if(o.Switch != null)
        {
            this.CurrentSwitch = null;
        }
        if(o.Name == "LightBox")
        {
            this.Player.PlayerStatus.Spotted = false;
        }
    }
}