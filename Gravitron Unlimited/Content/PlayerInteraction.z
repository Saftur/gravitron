class PlayerInteraction : ZilchComponent
{
    var CurrentItem : Cog = null;
    var CurrentSwitch : Cog = null;
    var HoldingItem : Boolean = false;
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
        Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.Space)) //OBJECT INTERACTIONS
        {
            //Switches
            if(this.CurrentSwitch != null)
            {
                Console.WriteLine("`this.CurrentSwitch.Sprite.Color`");
                //Gravity
                if(this.CurrentSwitch.Switch.Gravity)
                {
                    var switches = this.Space.FindAllObjectsByName("GravitySwitch");
                    foreach(var s in switches)
                    {
                        //Changing the different switch states
                        if(s.Sprite.Color == Real4(84.0/255 , 53.0/255, 159.0/255, 1))
                        {
                            s.Sprite.Color = Real4(24, 86, 159, 1);
                        }
                        else
                        {
                            s.Sprite.Color = Real4(84.0/255 , 53.0/255, 159.0/255, 1);
                        }
                    }
                    this.Owner.SweptController.Gravity *= -1;
                }
            }
            //Picking up and putting down objects
            else if(this.CurrentItem != null && !this.HoldingItem)
            {
                this.CurrentItem.FollowObject.ObjectToFollow.Cog = this.Owner;
                this.HoldingItem = true;
            }
            else if(this.CurrentItem != null)
            {
                var dad = this.Owner.FollowObject.ObjectToFollow.Cog;
                
                if(this.CurrentItem.Pickupable.ImInSomething)
                {
                    var x = dad.Transform.Translation.X - this.CurrentItem.Transform.Translation.X;
                    if(x < 0)
                        x = -1;
                    else
                        x = 2;
                        Console.WriteLine("Released");
                    this.CurrentItem.Transform.Translation += Real3(x, 0, 0);
                }
                this.CurrentItem.FollowObject.ObjectToFollow.Cog = null;
                this.CurrentItem.RigidBody.Velocity = dad.RigidBody.Velocity;
                this.HoldingItem = false;
            }
        }
    }
    function OnCollisionStarted(event : CollisionEvent)
    {
       
        if(event.OtherObject.Pickupable != null && event.OtherObject.Pickupable.Pickupable && this.CurrentItem == null)
        {
                this.CurrentItem = event.OtherObject;
        }
        if(event.OtherObject.Switch != null)
        {
            this.CurrentSwitch = event.OtherObject;
        }
    }
    function OnCollisionEnded(event : CollisionEvent)
    {
        
        if(event.OtherObject.Pickupable != null && event.OtherObject.Pickupable.Pickupable && this.CurrentItem != null)
        {
            this.CurrentItem = null;
        }
        if(event.OtherObject.Switch != null)
        {
            this.CurrentSwitch = null;
        }
    }
}